{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState, useEffect } from 'react';\nimport * as React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, ButtonGroup, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    paddingBottom: 15,\n    paddingTop: 15\n  },\n  buttonContainer: {\n    marginVertical: 10,\n    width: 200\n  },\n  button: {\n    padding: 10,\n    marginVertical: 5,\n    backgroundColor: '#55D6BE',\n    alignItems: 'center',\n    borderRadius: 16\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: '600'\n  }\n});\nvar Stack = createNativeStackNavigator();\nvar questions = [{\n  \"prompt\": \"Which shark has been found in the Mississippi River as far inland as Illinois?\",\n  \"type\": \"multiple-choice\",\n  \"choices\": [\"choice 1\", \"choice 2\", \"choice 3\", \"choice 4\"],\n  \"correct\": 0\n}, {\n  \"prompt\": \"This is another  question...\",\n  \"type\": \"multiple-answer\",\n  \"choices\": [\"choice 1\", \"choice 2\", \"choice 3\", \"choice 4\"],\n  \"correct\": [0, 2]\n}, {\n  \"prompt\": \"This is the third question...\",\n  \"type\": \"true-false\",\n  \"choices\": [\"choice 1\", \"choice 2\"],\n  \"correct\": 1\n}];\nexport default function App() {}","map":{"version":3,"names":["useState","useEffect","React","StatusBar","NavigationContainer","createNativeStackNavigator","Button","ButtonGroup","Input","Text","Font","FontAwesome","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref","font","loadAsync","_x2","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","paddingHorizontal","paddingTop","text","fontWeight","fontSize","paddingBottom","buttonContainer","marginVertical","width","button","padding","borderRadius","buttonText","color","Stack","questions","App"],"sources":["C:/Users/Frank/Desktop/DIG 4639C/dig4639-s24-react-rileybrunn/unit2/lab10/App.js"],"sourcesContent":["import { FlatList, StyleSheet, View } from 'react-native'\nimport { useState, useEffect } from 'react'\nimport * as React from 'react'\nimport { StatusBar } from 'expo-status-bar'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { Button, ButtonGroup, Input, Text } from '@rneui/themed'\nimport * as Font from 'expo-font'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    paddingBottom: 15,\n    paddingTop: 15,\n  },\n  buttonContainer: {\n    marginVertical: 10,\n    width: 200,\n  },\n  button: {\n    padding: 10,\n    marginVertical: 5,\n    backgroundColor: '#55D6BE',\n    alignItems: 'center',\n    borderRadius: 16,\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: '600',\n  },\n})\n\n\nconst Stack = createNativeStackNavigator()\n\nconst questions = [\n  {\n    \"prompt\": \"Which shark has been found in the Mississippi River as far inland as Illinois?\",\n  \"type\": \"multiple-choice\",\n  \"choices\": [\n    \"choice 1\",\n    \"choice 2\",\n    \"choice 3\",\n    \"choice 4\",\n  ],\n  \"correct\": 0\n},\n  {\n    \"prompt\": \"This is another  question...\",\n  \"type\": \"multiple-answer\",\n  \"choices\": [\n    \"choice 1\",\n    \"choice 2\",\n    \"choice 3\",\n    \"choice 4\",\n  ],\n  \"correct\": [0,2]\n},\n  {\n  \"prompt\": \"This is the third question...\",\n  \"type\": \"true-false\",\n  \"choices\": [\n    \"choice 1\",\n    \"choice 2\",\n  ],\n  \"correct\": 1\n},\n]\n\nexport default function App() {\n//   return (\n//     <NavigationContainer>\n//       <Stack.Navigator initialRouteName=''>\n//         <Stack.Screen name='' component={} />\n//         <Stack.Screen name='' component={} />\n//         <Stack.Screen name='' component={} />\n//       </Stack.Navigator>\n//     </NavigationContainer>\n//   )\n}\n\n\n// function ({ navigation }) {\n//   cacheFonts([FontAwesome.font])\n\n  // const  = [\n  //   { name: 'Push Ups', type: 'repetition', suggested: 'Planks' },\n  //   { name: 'Running', type: 'duration', suggested: 'Swimming' },\n  //   { name: 'Planks', type: 'repetition', suggested: 'Push Ups' },\n  //   { name: 'Swimming', type: 'duration', suggested: 'Running' },\n  // ]\n\n//   return (\n    \n//   )\n// }\n\n\n// function ({ route, navigation }) {\n//   cacheFonts([FontAwesome.font])\n  \n//   return (\n    \n//   )\n// }\n\n\n// function ({ route, navigation }) {\n//   cacheFonts([FontAwesome.font])\n\n//   return (\n\n//   )\n// }"],"mappings":";;;;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AAChE,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,WAAW,MAAM,gCAAgC;AAAA,SAGzCC,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAAzB,WAA0BC,KAAK,EAAE;IAC/B,OAAOA,KAAK,CAACC,GAAG;MAAA,IAAAC,IAAA,GAAAH,iBAAA,CAAC,WAAOI,IAAI;QAAA,aAAWX,IAAI,CAACY,SAAS,CAACD,IAAI,CAAC;MAAA;MAAA,iBAAAE,GAAA;QAAA,OAAAH,IAAA,CAAAL,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;EAC9D,CAAC;EAAA,OAAAF,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,IAAMQ,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,iBAAiB,EAAE,EAAE;IACrBC,UAAU,EAAE;EACd,CAAC;EACDC,IAAI,EAAE;IACJC,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE,EAAE;IACZC,aAAa,EAAE,EAAE;IACjBJ,UAAU,EAAE;EACd,CAAC;EACDK,eAAe,EAAE;IACfC,cAAc,EAAE,EAAE;IAClBC,KAAK,EAAE;EACT,CAAC;EACDC,MAAM,EAAE;IACNC,OAAO,EAAE,EAAE;IACXH,cAAc,EAAE,CAAC;IACjBV,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBa,YAAY,EAAE;EAChB,CAAC;EACDC,UAAU,EAAE;IACVC,KAAK,EAAE,MAAM;IACbV,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAGF,IAAMW,KAAK,GAAGzC,0BAA0B,CAAC,CAAC;AAE1C,IAAM0C,SAAS,GAAG,CAChB;EACE,QAAQ,EAAE,gFAAgF;EAC5F,MAAM,EAAE,iBAAiB;EACzB,SAAS,EAAE,CACT,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,CACX;EACD,SAAS,EAAE;AACb,CAAC,EACC;EACE,QAAQ,EAAE,8BAA8B;EAC1C,MAAM,EAAE,iBAAiB;EACzB,SAAS,EAAE,CACT,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,CACX;EACD,SAAS,EAAE,CAAC,CAAC,EAAC,CAAC;AACjB,CAAC,EACC;EACA,QAAQ,EAAE,+BAA+B;EACzC,MAAM,EAAE,YAAY;EACpB,SAAS,EAAE,CACT,UAAU,EACV,UAAU,CACX;EACD,SAAS,EAAE;AACb,CAAC,CACA;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG,CAU9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}