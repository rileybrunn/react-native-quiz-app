{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState, useEffect } from 'react';\nimport * as React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, ButtonGroup, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref3 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    paddingBottom: 15,\n    paddingTop: 15\n  },\n  buttonContainer: {\n    marginVertical: 10,\n    width: 200\n  },\n  button: {\n    padding: 10,\n    marginVertical: 5,\n    backgroundColor: '#55D6BE',\n    alignItems: 'center',\n    borderRadius: 16\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: '600'\n  }\n});\nvar Stack = createNativeStackNavigator();\nvar questions = [{\n  \"prompt\": \"Which shark has been found in the Mississippi River as far inland as Illinois?\",\n  \"type\": \"multiple-choice\",\n  \"choices\": [\"Tiger Shark\", \"Bull Shark\", \"Reef Shark\", \"Nurse Shark\"],\n  \"correct\": 0\n}, {\n  \"prompt\": \"Which are in the top 5 biggest shark species?\",\n  \"type\": \"multiple-answer\",\n  \"choices\": [\"Whale Shark\", \"Spiny Dogfish\", \"Horn Shark\", \"Basking Shark\"],\n  \"correct\": [0, 2]\n}, {\n  \"prompt\": \"Blue sharks are actually blue.\",\n  \"type\": \"true-false\",\n  \"choices\": [\"True\", \"False\"],\n  \"correct\": 1\n}];\nexport default function App() {\n  cacheFonts([FontAwesome.font]);\n  var correct = 0;\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Question\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Question\",\n        initialParams: {\n          questionNumber: 0,\n          data: questions,\n          userChoices: []\n        },\n        options: {\n          headerShown: false\n        },\n        children: function children(props) {\n          return _jsx(Question, _objectSpread({}, props));\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Summary\",\n        component: SummaryScreen,\n        initialParams: {\n          questionNumber: questions.length - 1,\n          data: questions,\n          userChoices: []\n        },\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nexport function Question(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  cacheFonts([FontAwesome.font]);\n  var _route$params = route.params,\n    data = _route$params.data,\n    userChoices = _route$params.userChoices,\n    questionNumber = _route$params.questionNumber;\n  var _data$questionNumber = data[questionNumber],\n    choices = _data$questionNumber.choices,\n    prompt = _data$questionNumber.prompt,\n    type = _data$questionNumber.type;\n  var initialSelection = 0;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedIndex = _useState2[0],\n    setSelectedIndex = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedIndexes = _useState4[0],\n    setSelectedIndexes = _useState4[1];\n  var nextQuestion = function nextQuestion() {\n    var nextQuestion = questionNumber + 1;\n    if (type !== 'multiple-answer') {\n      userChoices.push(selectedIndex);\n    } else {\n      userChoices.push(selectedIndexes);\n    }\n    if (nextQuestion < questions.length) {\n      navigation.navigate('Question', {\n        questionNumber: nextQuestion,\n        questions: questions,\n        userChoices: userChoices\n      });\n    } else {\n      navigation.navigate('Summary', {\n        questionNumber: nextQuestion,\n        questions: questions,\n        userChoices: userChoices\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: true,\n    children: [_jsx(Text, {\n      children: data.prompt\n    }), _jsx(ButtonGroup, {\n      testID: \"choices\",\n      buttons: [data.choices],\n      selectMultiple: true,\n      selectedIndexes: selectedIndexes,\n      onPress: function onPress(value) {\n        setSelectedIndexes(value);\n      }\n    }), _jsx(Button, {\n      testID: \"next-question\",\n      onPress: function onPress() {\n        return navigation.navigate('');\n      },\n      children: \"Next\"\n    })]\n  });\n}\nexport function Summary(_ref2) {\n  var route = _ref2.route,\n    navigation = _ref2.navigation;\n  cacheFonts([FontAwesome.font]);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Summary\"\n    }), _jsxs(Text, {\n      testID: \"total\",\n      children: [\"Score: \", \"/3\"]\n    }), _jsx(Question, {})]\n  });\n}","map":{"version":3,"names":["useState","useEffect","React","StatusBar","NavigationContainer","createNativeStackNavigator","Button","ButtonGroup","Input","Text","Font","FontAwesome","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref3","font","loadAsync","_x2","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","paddingHorizontal","paddingTop","text","fontWeight","fontSize","paddingBottom","buttonContainer","marginVertical","width","button","padding","borderRadius","buttonText","color","Stack","questions","App","correct","children","Navigator","initialRouteName","Screen","name","initialParams","questionNumber","data","userChoices","options","headerShown","props","Question","_objectSpread","component","SummaryScreen","length","_ref","route","navigation","_route$params","params","_data$questionNumber","choices","prompt","type","initialSelection","_useState","_useState2","_slicedToArray","selectedIndex","setSelectedIndex","_useState3","_useState4","selectedIndexes","setSelectedIndexes","nextQuestion","push","navigate","View","style","testID","buttons","selectMultiple","onPress","value","Summary","_ref2"],"sources":["C:/Users/Frank/Desktop/DIG 4639C/dig4639-s24-react-rileybrunn/unit2/lab10/App.js"],"sourcesContent":["import { FlatList, StyleSheet, View } from 'react-native'\nimport { useState, useEffect } from 'react'\nimport * as React from 'react'\nimport { StatusBar } from 'expo-status-bar'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { Button, ButtonGroup, Input, Text } from '@rneui/themed'\nimport * as Font from 'expo-font'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    paddingBottom: 15,\n    paddingTop: 15,\n  },\n  buttonContainer: {\n    marginVertical: 10,\n    width: 200,\n  },\n  button: {\n    padding: 10,\n    marginVertical: 5,\n    backgroundColor: '#55D6BE',\n    alignItems: 'center',\n    borderRadius: 16,\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: '600',\n  },\n})\n\n\nconst Stack = createNativeStackNavigator()\n\nconst questions = [\n  {\n    \"prompt\": \"Which shark has been found in the Mississippi River as far inland as Illinois?\",\n    \"type\": \"multiple-choice\",\n    \"choices\": [\n      \"Tiger Shark\",\n      \"Bull Shark\",\n      \"Reef Shark\",\n      \"Nurse Shark\",\n    ],\n    \"correct\": 0\n  },\n  {\n    \"prompt\": \"Which are in the top 5 biggest shark species?\",\n    \"type\": \"multiple-answer\",\n    \"choices\": [\n      \"Whale Shark\",\n      \"Spiny Dogfish\",\n      \"Horn Shark\",\n      \"Basking Shark\",\n    ],\n    \"correct\": [0, 2]\n  },\n  {\n    \"prompt\": \"Blue sharks are actually blue.\",\n    \"type\": \"true-false\",\n    \"choices\": [\n      \"True\",\n      \"False\",\n    ],\n    \"correct\": 1\n  },\n]\n\n\nexport default function App() {\n  cacheFonts([FontAwesome.font])\n\n  let correct = 0\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName='Question'>\n        <Stack.Screen\n          name='Question'\n          initialParams={{\n            questionNumber: 0,\n            data: questions,\n            userChoices: [],\n          }}\n          options={{ headerShown: false }}\n        >\n          {(props) => <Question {...props} />}\n        </Stack.Screen>\n        <Stack.Screen\n          name='Summary'\n          component={SummaryScreen}\n          initialParams={{\n            questionNumber: questions.length - 1,\n            data: questions,\n            userChoices: [],\n          }}\n          options={{ headerShown: false }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\n\nexport function Question({ route, navigation }) {\n  cacheFonts([FontAwesome.font])\n  const {data, userChoices, questionNumber} = route.params\n  let {choices, prompt, type} = data[questionNumber]\n  let initialSelection = 0\n  let [selectedIndex, setSelectedIndex] = useState(0)\n  let [selectedIndexes, setSelectedIndexes] = useState([])\n\n  let nextQuestion = () => {\n    let nextQuestion = questionNumber + 1\n    if (type !== 'multiple-answer') {\n      userChoices.push(selectedIndex)\n    } else {\n      userChoices.push(selectedIndexes)\n    }\n    if (nextQuestion < questions.length) {\n      navigation.navigate('Question', {\n        questionNumber: nextQuestion,\n        questions,\n        userChoices,\n      })\n    } else {\n      navigation.navigate('Summary', {\n        questionNumber: nextQuestion,\n        questions,\n        userChoices,\n      })\n    }\n  }\n\n  return (\n    <View style>\n      <Text>{data.prompt}</Text>\n      <ButtonGroup\n        testID='choices'\n        buttons={[data.choices]}\n        selectMultiple\n        selectedIndexes={selectedIndexes}\n        onPress={(value) => {\n          setSelectedIndexes(value);\n        }}\n      />\n      <Button\n        testID='next-question'\n        onPress={() => navigation.navigate('')}\n      >Next</Button>\n    </View>\n  )\n}\n\n\nexport function Summary({ route, navigation }) {\n  cacheFonts([FontAwesome.font])\n\n\n  return (\n    <View>\n      <Text>Summary</Text>\n      <Text testID='total'>Score: { }/3</Text>\n      <Question></Question>\n    </View>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}