{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { CheckBox, Input } from '@rneui/themed';\nimport { useState } from 'react';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref5 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  cacheFonts([FontAwesome.font]);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var loginData = yield AsyncStorage.getItem('loginData');\n        if (loginData) {\n          var users = JSON.parse(loginData);\n          var user = users.find(function (u) {\n            return u.username === username && u.password === password;\n          });\n          var userTest = users.find(function () {\n            return username === 'test' && password === 'Test1@';\n          });\n          if (user || userTest) {\n            console.log(loginData);\n            navigation.navigate('Todo');\n          } else {\n            alert('Invalid username or password');\n          }\n        } else {\n          alert('No users registered yet');\n        }\n      } catch (error) {\n        console.error('Error retrieving login data: ', error);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: [styles.container],\n    children: [_jsx(Input, {\n      placeholder: \"Username\",\n      testID: \"login-username\",\n      value: username,\n      onChangeText: function onChangeText(value) {\n        setUsername(value);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Password\",\n      testID: \"login-password\",\n      value: password,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(value) {\n        setPassword(value);\n      }\n    }), _jsx(Button, {\n      title: \"Login\",\n      testID: \"login-button\",\n      onPress: handleLogin\n    }), _jsx(Button, {\n      title: \"Register\",\n      testID: \"login-register\",\n      onPress: function onPress() {\n        return navigation.navigate('Registration');\n      }\n    })]\n  });\n}\nvar RegistrationScreen = function RegistrationScreen() {\n  var _useState5 = useState({\n      firstname: '',\n      lastname: '',\n      username: '',\n      phonenumber: '',\n      password: '',\n      confirmpassword: '',\n      email: '',\n      zip: '',\n      newsletter: false\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    formData = _useState6[0],\n    setFormData = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    errors = _useState8[0],\n    setErrors = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    registerDisabled = _useState10[0],\n    setRegisterDisabled = _useState10[1];\n  var handleInputChange = function handleInputChange(name, value) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, name, value)));\n    validateInput(name, value);\n  };\n  var validateInput = function validateInput(name, value) {\n    var errorMessage = '';\n    switch (name) {\n      case 'firstname':\n      case 'lastname':\n        errorMessage = /^[^\\d=?\\\\/@#%^&*()]+$/.test(value) ? '' : 'Error: Must only include word or symbol characters, no numbers';\n        break;\n      case 'phonenumber':\n        errorMessage = /^\\(\\d{3}\\) \\d{3}-\\d{4}$/.test(value) ? '' : 'Error: Phone Number must be in the format (xxx) xxx-xxxx';\n        break;\n      case 'email':\n        errorMessage = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/.test(value) ? '' : 'Error: Must be a valid email address';\n        break;\n      case 'password':\n        errorMessage = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(value) ? '' : 'Error: Password must contain at least one uppercase letter, one lowercase letter, one number, one special character, and be at least 8 characters long';\n        break;\n      case 'confirmpassword':\n        errorMessage = value === formData.password ? '' : 'Error: Passwords do not match';\n        break;\n      case 'zip':\n        errorMessage = /^\\d{5}$/.test(value) ? '' : 'Error: ZIP Code must be 5 digits';\n        break;\n      default:\n        break;\n    }\n    setErrors(_objectSpread(_objectSpread({}, errors), {}, _defineProperty({}, name, errorMessage)));\n    handleInputValidity();\n  };\n  var handleBlur = function handleBlur(name) {\n    validateInput(name, formData[name]);\n  };\n  var handleInputValidity = function handleInputValidity() {\n    var isValid = Object.values(errors).every(function (error) {\n      return !error;\n    }) && Object.values(formData).every(function (value) {\n      return !!value;\n    });\n    setRegisterDisabled(!isValid);\n  };\n  var handleRegister = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (Object.values(errors).every(function (error) {\n        return !error;\n      })) {\n        try {\n          var loginDataString = yield AsyncStorage.getItem('loginData');\n          var loginData = loginDataString ? JSON.parse(loginDataString) : [];\n          loginData.push({\n            username: formData.username,\n            password: formData.password\n          });\n          yield AsyncStorage.setItem('loginData', JSON.stringify(loginData));\n          setFormData({\n            firstname: '',\n            lastname: '',\n            username: '',\n            phonenumber: '',\n            password: '',\n            confirmpassword: '',\n            email: '',\n            zip: '',\n            newsletter: false\n          });\n          setErrors({});\n          setRegisterDisabled(true);\n          alert('Registration Successful');\n        } catch (error) {\n          console.error('Error saving registration data:', error);\n          alert('Registration Failed. Please try again.');\n        }\n      } else {\n        alert('Please correct all errors before registering.');\n      }\n    });\n    return function handleRegister() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleCheckmark = function handleCheckmark() {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      newsletter: !formData.newsletter\n    }));\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Input, {\n      testID: \"firstname\",\n      label: \"First Name\",\n      value: formData.firstname,\n      onChangeText: function onChangeText(value) {\n        return handleInputChange('firstname', value);\n      },\n      onBlur: function onBlur() {\n        return handleBlur('firstname');\n      },\n      errorMessage: errors.firstname\n    }), _jsx(Input, {\n      testID: \"lastname\",\n      label: \"Last Name\",\n      value: formData.lastname,\n      onChangeText: function onChangeText(value) {\n        return handleInputChange('lastname', value);\n      },\n      onBlur: function onBlur() {\n        return handleBlur('lastname');\n      },\n      errorMessage: errors.lastname\n    }), _jsx(Input, {\n      testID: \"username\",\n      label: \"Username\",\n      value: formData.username,\n      onChangeText: function onChangeText(value) {\n        return handleInputChange('username', value);\n      },\n      onBlur: function onBlur() {\n        return handleBlur('username');\n      },\n      errorMessage: errors.username\n    }), _jsx(Input, {\n      testID: \"phonenumber\",\n      label: \"Phone Number\",\n      value: formData.phonenumber,\n      onChangeText: function onChangeText(value) {\n        return handleInputChange('phonenumber', value);\n      },\n      onBlur: function onBlur() {\n        return handleBlur('phonenumber');\n      },\n      errorMessage: errors.phonenumber\n    }), _jsx(Input, {\n      testID: \"password\",\n      label: \"Password\",\n      secureTextEntry: true,\n      value: formData.password,\n      onChangeText: function onChangeText(value) {\n        return handleInputChange('password', value);\n      },\n      onBlur: function onBlur() {\n        return handleBlur('password');\n      },\n      errorMessage: errors.password\n    }), _jsx(Input, {\n      testID: \"confirmpassword\",\n      label: \"Confirm Password\",\n      secureTextEntry: true,\n      value: formData.confirmpassword,\n      onChangeText: function onChangeText(value) {\n        return handleInputChange('confirmpassword', value);\n      },\n      onBlur: function onBlur() {\n        return handleBlur('confirmpassword');\n      },\n      errorMessage: errors.confirmpassword\n    }), _jsx(Input, {\n      testID: \"email\",\n      label: \"Email\",\n      value: formData.email,\n      onChangeText: function onChangeText(value) {\n        return handleInputChange('email', value);\n      },\n      onBlur: function onBlur() {\n        return handleBlur('email');\n      },\n      errorMessage: errors.email\n    }), _jsx(Input, {\n      testID: \"zip\",\n      label: \"ZIP Code\",\n      value: formData.zip,\n      onChangeText: function onChangeText(value) {\n        return handleInputChange('zip', value);\n      },\n      onBlur: function onBlur() {\n        return handleBlur('zip');\n      },\n      errorMessage: errors.zip\n    }), _jsx(CheckBox, {\n      title: 'Sign up for newsletter',\n      testID: \"newsletter\",\n      value: isSelected,\n      onValueChange: setSelection\n    }), _jsx(Button, {\n      title: \"Register\",\n      onPress: handleRegister,\n      disabled: registerDisabled\n    })]\n  });\n};\nvar startTasks = [{\n  description: 'Task 1',\n  completed: true,\n  key: 1\n}, {\n  description: 'Task 2',\n  completed: true,\n  key: 2\n}];\nfunction TodoScreen() {\n  cacheFonts([FontAwesome.font]);\n  var _useState11 = useState(startTasks),\n    _useState12 = _slicedToArray(_useState11, 2),\n    tasks = _useState12[0],\n    setTasks = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    input = _useState14[0],\n    setInput = _useState14[1];\n  var updateTask = function updateTask(task) {\n    task.completed = !task.completed;\n    setTasks(_toConsumableArray(tasks));\n  };\n  var addTask = function addTask() {\n    var maxKey = 0;\n    tasks.forEach(function (task) {\n      if (task.key > maxKey) {\n        maxKey = task.key;\n      }\n    });\n    setTasks([].concat(_toConsumableArray(tasks), [{\n      description: input,\n      completed: false,\n      key: maxKey + 1\n    }]));\n    console.log(tasks);\n    setInput('');\n  };\n  var renderItem = function renderItem(_ref4) {\n    var item = _ref4.item;\n    return _jsx(CheckBox, {\n      textStyle: item.completed ? {\n        textDecorationLine: 'line-through',\n        textDecorationStyle: 'solid'\n      } : undefined,\n      title: item.description,\n      checked: item.completed,\n      onPress: function onPress() {\n        return updateTask(item);\n      }\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsx(Input, {\n      onChangeText: setInput,\n      value: input,\n      placeholder: \"New task...\"\n    }), _jsx(Button, {\n      title: \"Add\",\n      onPress: addTask\n    })]\n  });\n}\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Registration\",\n        component: RegistrationScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Todo\",\n        component: TodoScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 20\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","SafeAreaView","Button","FlatList","CheckBox","Input","useState","Font","FontAwesome","React","NavigationContainer","createNativeStackNavigator","AsyncStorage","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref5","font","loadAsync","_x2","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","_ref2","loginData","getItem","users","JSON","parse","user","find","u","userTest","console","log","navigate","alert","error","style","styles","container","children","placeholder","testID","value","onChangeText","secureTextEntry","title","onPress","RegistrationScreen","_useState5","firstname","lastname","phonenumber","confirmpassword","email","zip","newsletter","_useState6","formData","setFormData","_useState7","_useState8","errors","setErrors","_useState9","_useState10","registerDisabled","setRegisterDisabled","handleInputChange","name","_objectSpread","_defineProperty","validateInput","errorMessage","test","handleInputValidity","handleBlur","isValid","Object","values","every","handleRegister","_ref3","loginDataString","push","setItem","stringify","handleCheckmark","label","onBlur","isSelected","onValueChange","setSelection","disabled","startTasks","description","completed","key","TodoScreen","_useState11","_useState12","tasks","setTasks","_useState13","_useState14","input","setInput","updateTask","task","_toConsumableArray","addTask","maxKey","forEach","concat","renderItem","_ref4","item","textStyle","textDecorationLine","textDecorationStyle","undefined","checked","data","Stack","App","Navigator","initialRouteName","Screen","component","create","flex","backgroundColor","alignItems","justifyContent","paddingHorizontal","paddingTop"],"sources":["C:/Users/Frank/Desktop/DIG 4639C/dig4639-s24-react-rileybrunn/unit2/lab8/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, SafeAreaView, Button, FlatList } from 'react-native';\nimport { CheckBox, Input } from '@rneui/themed';\nimport { useState } from 'react';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font));\n}\n\nfunction LoginScreen({ navigation }) {\n  cacheFonts([FontAwesome.font]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // used Chat GPT to help with AsyncStorage/handleLogin\n  const handleLogin = async () => {\n    try {\n      const loginData = await AsyncStorage.getItem('loginData');\n      if (loginData) {\n        const users = JSON.parse(loginData);\n        const user = users.find(u => u.username === username && u.password === password);\n        const userTest = users.find(() => username === 'test' && password === 'Test1@');\n        if (user || userTest) {\n          console.log(loginData);\n          navigation.navigate('Todo');\n        } else {\n          alert('Invalid username or password');\n        }\n      } else {\n        alert('No users registered yet');\n      }\n    } catch (error) {\n      console.error('Error retrieving login data: ', error);\n    }\n  };\n\n  return (\n    <SafeAreaView style={[styles.container]}>\n      <Input\n      placeholder='Username'\n      testID='login-username'\n      value={username}\n      onChangeText={(value) => { setUsername(value) }}\n      />\n      <Input placeholder='Password'\n      testID='login-password'\n      value={password}\n      secureTextEntry={true}\n      onChangeText={(value) => { setPassword(value) }}\n      />\n      <Button title='Login'\n      testID='login-button'\n      onPress={handleLogin}\n      />\n      <Button title='Register'\n      testID='login-register'\n      onPress={() =>\n      navigation.navigate('Registration')}\n      />\n    </SafeAreaView>\n  )\n}\n\n\n\n// used Chat GPT to help with RegistrationScreen functionality\nconst RegistrationScreen = () => {\n  const [formData, setFormData] = useState({\n    firstname: '',\n    lastname: '',\n    username: '',\n    phonenumber: '',\n    password: '',\n    confirmpassword: '',\n    email: '',\n    zip: '',\n    newsletter: false,\n  });\n  const [errors, setErrors] = useState({});\n  const [registerDisabled, setRegisterDisabled] = useState(true);\n\n  const handleInputChange = (name, value) => {\n    setFormData({ ...formData, [name]: value });\n    validateInput(name, value);\n  };\n\n  const validateInput = (name, value) => {\n    let errorMessage = '';\n\n    switch (name) {\n      case 'firstname':\n      case 'lastname':\n        errorMessage = /^[^\\d=?\\\\/@#%^&*()]+$/.test(value)\n          ? ''\n          : 'Error: Must only include word or symbol characters, no numbers';\n        break;\n      case 'phonenumber':\n        errorMessage = /^\\(\\d{3}\\) \\d{3}-\\d{4}$/.test(value)\n          ? ''\n          : 'Error: Phone Number must be in the format (xxx) xxx-xxxx';\n        break;\n      case 'email':\n        errorMessage = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/.test(value)\n          ? ''\n          : 'Error: Must be a valid email address';\n        break;\n      case 'password':\n        errorMessage = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(value)\n          ? ''\n          : 'Error: Password must contain at least one uppercase letter, one lowercase letter, one number, one special character, and be at least 8 characters long';\n        break;\n      case 'confirmpassword':\n        errorMessage = value === formData.password ? '' : 'Error: Passwords do not match';\n        break;\n      case 'zip':\n        errorMessage = /^\\d{5}$/.test(value) ? '' : 'Error: ZIP Code must be 5 digits';\n        break;\n      default:\n        break;\n    }\n\n    setErrors({ ...errors, [name]: errorMessage });\n    handleInputValidity();\n  };\n\n  const handleBlur = (name) => {\n    validateInput(name, formData[name]);\n  };\n\n  const handleInputValidity = () => {\n    const isValid = Object.values(errors).every((error) => !error) && Object.values(formData).every((value) => !!value);\n    setRegisterDisabled(!isValid);\n  };\n\n  const handleRegister = async () => {\n    if (Object.values(errors).every((error) => !error)) {\n      try {\n        const loginDataString = await AsyncStorage.getItem('loginData');\n        const loginData = loginDataString ? JSON.parse(loginDataString) : [];\n        loginData.push({ username: formData.username, password: formData.password });\n        await AsyncStorage.setItem('loginData', JSON.stringify(loginData));\n        setFormData({\n          firstname: '',\n          lastname: '',\n          username: '',\n          phonenumber: '',\n          password: '',\n          confirmpassword: '',\n          email: '',\n          zip: '',\n          newsletter: false,\n        });\n        setErrors({});\n        setRegisterDisabled(true);\n        alert('Registration Successful');\n      } catch (error) {\n        console.error('Error saving registration data:', error);\n        alert('Registration Failed. Please try again.');\n      }\n    } else {\n      alert('Please correct all errors before registering.');\n    }\n  };\n  const handleCheckmark = () => {\n    setFormData({...formData, newsletter: !formData.newsletter})\n  }\n  // [isSelected, setSelection] = useState(false);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Input\n        testID=\"firstname\"\n        label=\"First Name\"\n        value={formData.firstname}\n        onChangeText={(value) => handleInputChange('firstname', value)}\n        onBlur={() => handleBlur('firstname')}\n        errorMessage={errors.firstname}\n      />\n      <Input\n        testID=\"lastname\"\n        label=\"Last Name\"\n        value={formData.lastname}\n        onChangeText={(value) => handleInputChange('lastname', value)}\n        onBlur={() => handleBlur('lastname')}\n        errorMessage={errors.lastname}\n      />\n      <Input\n        testID=\"username\"\n        label=\"Username\"\n        value={formData.username}\n        onChangeText={(value) => handleInputChange('username', value)}\n        onBlur={() => handleBlur('username')}\n        errorMessage={errors.username}\n      />\n      <Input\n        testID=\"phonenumber\"\n        label=\"Phone Number\"\n        value={formData.phonenumber}\n        onChangeText={(value) => handleInputChange('phonenumber', value)}\n        onBlur={() => handleBlur('phonenumber')}\n        errorMessage={errors.phonenumber}\n      />\n      <Input\n        testID=\"password\"\n        label=\"Password\"\n        secureTextEntry\n        value={formData.password}\n        onChangeText={(value) => handleInputChange('password', value)}\n        onBlur={() => handleBlur('password')}\n        errorMessage={errors.password}\n      />\n      <Input\n        testID=\"confirmpassword\"\n        label=\"Confirm Password\"\n        secureTextEntry\n        value={formData.confirmpassword}\n        onChangeText={(value) => handleInputChange('confirmpassword', value)}\n        onBlur={() => handleBlur('confirmpassword')}\n        errorMessage={errors.confirmpassword}\n      />\n      <Input\n        testID=\"email\"\n        label=\"Email\"\n        value={formData.email}\n        onChangeText={(value) => handleInputChange('email', value)}\n        onBlur={() => handleBlur('email')}\n        errorMessage={errors.email}\n      />\n      <Input\n        testID=\"zip\"\n        label=\"ZIP Code\"\n        value={formData.zip}\n        onChangeText={(value) => handleInputChange('zip', value)}\n        onBlur={() => handleBlur('zip')}\n        errorMessage={errors.zip}\n      />\n      <CheckBox\n      title={'Sign up for newsletter'}\n      testID='newsletter'\n      value={isSelected}\n      onValueChange={setSelection}\n      />\n      <Button\n        title=\"Register\"\n        onPress={handleRegister}\n        disabled={registerDisabled}\n      />\n    </SafeAreaView>\n  );\n};\n\n\n\nlet startTasks = [\n  { description: 'Task 1', completed: true, key: 1 },\n  { description: 'Task 2', completed: true, key: 2 }\n]\n\nfunction TodoScreen() {\n  cacheFonts([FontAwesome.font]);\n  let [tasks, setTasks] = useState(startTasks);\n  let [input, setInput] = useState('');\n  let updateTask = (task) => {\n    task.completed = !task.completed;\n    setTasks([...tasks]);\n  }\n  let addTask = () => {\n    let maxKey = 0;\n    tasks.forEach(task => {\n      if (task.key > maxKey) {\n        maxKey = task.key;\n      }\n    });\n    setTasks([...tasks, {\n      description: input,\n      completed: false,\n      key: maxKey + 1\n    }]);\n    console.log(tasks);\n    setInput('');\n  }\n  let renderItem = ({ item }) => {\n    return <CheckBox\n      textStyle={item.completed ? {\n        textDecorationLine: 'line-through', textDecorationStyle: 'solid'\n      } : undefined}\n      title={item.description}\n      checked={item.completed}\n      onPress={() => updateTask(item)} />\n  }\n  return (\n    <SafeAreaView style={[styles.container]}>\n      <StatusBar style='auto' />\n      <FlatList data={tasks} renderItem={renderItem} />\n      <Input\n        onChangeText={setInput}\n        value={input}\n        placeholder='New task...'\n      ></Input><Button title='Add' onPress={addTask} />\n    </SafeAreaView>\n  );\n}\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName='Login'>\n        <Stack.Screen name='Login' component={LoginScreen} />\n        <Stack.Screen name='Registration' component={RegistrationScreen} />\n        <Stack.Screen name='Todo' component={TodoScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}