{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { CheckBox, Input } from '@rneui/themed';\nimport { useCallback, useEffect, useState } from 'react';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref7 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  cacheFonts([FontAwesome.font]);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var loginData = yield AsyncStorage.getItem('loginData');\n        if (loginData) {\n          var users = JSON.parse(loginData);\n          var user = users.find(function (u) {\n            return u.username === username && u.password === password;\n          });\n          var userTest = users.find(function () {\n            return username === 'test' && password === 'Test1@';\n          });\n          if (user || userTest) {\n            navigation.navigate('Todo');\n            console.log(loginData);\n          } else {\n            alert('Invalid username or password');\n          }\n        } else {\n          alert('No users registered yet');\n        }\n      } catch (error) {\n        console.error('Error retrieving login data: ', error);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: [styles.container],\n    children: [_jsx(Input, {\n      placeholder: \"Username\",\n      testID: \"login-username\",\n      value: username,\n      onChangeText: function onChangeText(value) {\n        setUsername(value);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Password\",\n      testID: \"login-password\",\n      value: password,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(value) {\n        setPassword(value);\n      }\n    }), _jsx(Button, {\n      title: \"Login\",\n      testID: \"login-button\",\n      onPress: handleLogin\n    }), _jsx(Button, {\n      title: \"Register\",\n      testID: \"login-register\",\n      onPress: function onPress() {\n        return navigation.navigate('Registration');\n      }\n    })]\n  });\n}\nfunction RegistrationScreen(_ref3) {\n  var navigation = _ref3.navigation,\n    route = _ref3.route;\n  cacheFonts([FontAwesome.font]);\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUsername = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var handleRegister = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var loginData = yield AsyncStorage.getItem('loginData');\n        var users = loginData ? JSON.parse(loginData) : [];\n        users.push({\n          username: username,\n          password: password\n        });\n        yield AsyncStorage.setItem('loginData', JSON.stringify(users));\n        if (loginData) {\n          alert('User registered successfully');\n          console.log(loginData);\n        }\n      } catch (error) {\n        console.error('Error registering user: ', error);\n      }\n    });\n    return function handleRegister() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isSelected = _useState10[0],\n    setSelection = _useState10[1];\n  return _jsxs(SafeAreaView, {\n    style: [styles.container],\n    children: [_jsx(Input, {\n      placeholder: \"First Name\",\n      testID: \"firstname\",\n      onChangeText: function onChangeText(value) {\n        setFirstName(value);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Last Name\",\n      testID: \"lastname\",\n      onChangeText: function onChangeText(value) {\n        setLastName(value);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Username\",\n      testID: \"username\",\n      onChangeText: function onChangeText(value) {\n        setUsername(value);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Phone Number\",\n      testID: \"phonenumber\",\n      onChangeText: function onChangeText(value) {\n        setPhoneNumber(value);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Password\",\n      testID: \"password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(value) {\n        setPassword(value);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Confirm Password\",\n      testID: \"confirmpassword\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(value) {\n        setPassword(value);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Email\",\n      testID: \"email\",\n      onChangeText: function onChangeText(value) {\n        setEmail(value);\n      }\n    }), _jsx(Input, {\n      placeholder: \"ZIP Code\",\n      testID: \"zip\",\n      onChangeText: function onChangeText(value) {\n        setZip(value);\n      }\n    }), _jsx(CheckBox, {\n      title: 'Sign up for newsletter',\n      testID: \"newsletter\",\n      value: isSelected,\n      onValueChange: setSelection\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: handleRegister\n    })]\n  });\n}\nvar startTasks = [{\n  description: 'Task 1',\n  completed: true,\n  key: 1\n}, {\n  description: 'Task 2',\n  completed: true,\n  key: 2\n}];\nfunction TodoScreen(_ref5) {\n  var navigation = _ref5.navigation;\n  cacheFonts([FontAwesome.font]);\n  var _useState11 = useState(startTasks),\n    _useState12 = _slicedToArray(_useState11, 2),\n    tasks = _useState12[0],\n    setTasks = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    input = _useState14[0],\n    setInput = _useState14[1];\n  var updateTask = function updateTask(task) {\n    task.completed = !task.completed;\n    setTasks(_toConsumableArray(tasks));\n  };\n  var addTask = function addTask() {\n    var maxKey = 0;\n    tasks.forEach(function (task) {\n      if (task.key > maxKey) {\n        maxKey = task.key;\n      }\n    });\n    setTasks([].concat(_toConsumableArray(tasks), [{\n      description: input,\n      completed: false,\n      key: maxKey + 1\n    }]));\n    console.log(tasks);\n    setInput('');\n  };\n  var renderItem = function renderItem(_ref6) {\n    var item = _ref6.item;\n    return _jsx(CheckBox, {\n      textStyle: item.completed ? {\n        textDecorationLine: 'line-through',\n        textDecorationStyle: 'solid'\n      } : undefined,\n      title: item.description,\n      checked: item.completed,\n      onPress: function onPress() {\n        return updateTask(item);\n      }\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsx(Input, {\n      onChangeText: setInput,\n      value: input,\n      placeholder: \"New task...\"\n    }), _jsx(Button, {\n      title: \"Add\",\n      onPress: addTask\n    })]\n  });\n}\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Registration\",\n        component: RegistrationScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Todo\",\n        component: TodoScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","SafeAreaView","Button","FlatList","Text","View","CheckBox","Input","useCallback","useEffect","useState","Font","FontAwesome","React","NavigationContainer","createNativeStackNavigator","AsyncStorage","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref7","font","loadAsync","_x2","LoginScreen","_ref","navigation","route","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","_ref2","loginData","getItem","users","JSON","parse","user","find","u","userTest","navigate","console","log","alert","error","style","styles","container","children","placeholder","testID","value","onChangeText","secureTextEntry","title","onPress","RegistrationScreen","_ref3","_useState5","_useState6","_useState7","_useState8","handleRegister","_ref4","push","setItem","stringify","_useState9","_useState10","isSelected","setSelection","setFirstName","setLastName","setPhoneNumber","setEmail","setZip","onValueChange","startTasks","description","completed","key","TodoScreen","_ref5","_useState11","_useState12","tasks","setTasks","_useState13","_useState14","input","setInput","updateTask","task","_toConsumableArray","addTask","maxKey","forEach","concat","renderItem","_ref6","item","textStyle","textDecorationLine","textDecorationStyle","undefined","checked","data","Stack","App","Navigator","initialRouteName","Screen","name","component","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/Frank/Desktop/DIG 4639C/dig4639-s24-react-rileybrunn/unit2/lab8/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, SafeAreaView, Button, FlatList, Text, View } from 'react-native';\nimport { CheckBox, Input } from '@rneui/themed';\nimport { useCallback, useEffect, useState } from 'react';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font));\n}\n\nfunction LoginScreen({ navigation, route }) {\n  cacheFonts([FontAwesome.font]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // used Chat GPT to help with AsyncStorage/handleLogin\n  const handleLogin = async () => {\n    try {\n      const loginData = await AsyncStorage.getItem('loginData');\n      if (loginData) {\n        const users = JSON.parse(loginData);\n        const user = users.find(u => u.username === username && u.password === password);\n        const userTest = users.find(() => username === 'test' && password === 'Test1@');\n        if (user || userTest) {\n          navigation.navigate('Todo');\n          console.log(loginData);\n        } else {\n          alert('Invalid username or password');\n        }\n      } else {\n        alert('No users registered yet');\n      }\n    } catch (error) {\n      console.error('Error retrieving login data: ', error);\n    }\n  };\n\n  return (\n    <SafeAreaView style={[styles.container]}>\n      <Input placeholder='Username' testID='login-username' value={username} onChangeText={(value) => { setUsername(value) }} />\n      <Input placeholder='Password' testID='login-password' value={password} secureTextEntry={true} onChangeText={(value) => { setPassword(value) }} />\n      <Button title='Login' testID='login-button' onPress={handleLogin} />\n      <Button title='Register' testID='login-register' onPress={() =>\n        navigation.navigate('Registration')} />\n    </SafeAreaView>\n  )\n}\n\nfunction RegistrationScreen({ navigation, route }) {\n  cacheFonts([FontAwesome.font]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // used Chat GPT to help with AsyncStorage/handleRegister\n  const handleRegister = async () => {\n    try {\n      const loginData = await AsyncStorage.getItem('loginData');\n      const users = loginData ? JSON.parse(loginData) : [];\n      users.push({ username, password });\n      await AsyncStorage.setItem('loginData', JSON.stringify(users));\n      if (loginData) {\n        alert('User registered successfully');\n        console.log(loginData);\n        \n      }\n    } catch (error) {\n      console.error('Error registering user: ', error);\n    }\n  };\n  const [isSelected, setSelection] = useState(false);\n\n  return (\n    <SafeAreaView style={[styles.container]}>\n      <Input placeholder='First Name' testID='firstname' onChangeText={(value) => { setFirstName(value) }} />\n      <Input placeholder='Last Name' testID='lastname' onChangeText={(value) => { setLastName(value) }} />\n      <Input placeholder='Username' testID='username' onChangeText={(value) => { setUsername(value) }} />\n      <Input placeholder='Phone Number' testID='phonenumber' onChangeText={(value) => { setPhoneNumber(value) }} />\n      <Input placeholder='Password' testID='password' secureTextEntry={true} onChangeText={(value) => { setPassword(value) }} />\n      <Input placeholder='Confirm Password' testID='confirmpassword' secureTextEntry={true} onChangeText={(value) => { setPassword(value) }} />\n      <Input placeholder='Email' testID='email' onChangeText={(value) => { setEmail(value) }} />\n      <Input placeholder='ZIP Code' testID='zip' onChangeText={(value) => { setZip(value) }} />\n      <CheckBox title={'Sign up for newsletter'} testID='newsletter' value={isSelected} onValueChange={setSelection} />\n      <Button title='Submit' onPress={handleRegister} />\n    </SafeAreaView>\n  )\n}\n\nlet startTasks = [\n  { description: 'Task 1', completed: true, key: 1 },\n  { description: 'Task 2', completed: true, key: 2 }\n]\n\nfunction TodoScreen({ navigation }) {\n  cacheFonts([FontAwesome.font]);\n  let [tasks, setTasks] = useState(startTasks);\n  let [input, setInput] = useState('');\n  let updateTask = (task) => {\n    task.completed = !task.completed;\n    setTasks([...tasks]);\n  }\n  let addTask = () => {\n    let maxKey = 0;\n    tasks.forEach(task => {\n      if (task.key > maxKey) {\n        maxKey = task.key;\n      }\n    });\n    setTasks([...tasks, {\n      description: input,\n      completed: false,\n      key: maxKey + 1\n    }]);\n    console.log(tasks);\n    setInput('');\n  }\n  let renderItem = ({ item }) => {\n    return <CheckBox\n      textStyle={item.completed ? {\n        textDecorationLine: 'line-through', textDecorationStyle: 'solid'\n      } : undefined}\n      title={item.description}\n      checked={item.completed}\n      onPress={() => updateTask(item)} />\n  }\n  return (\n    <SafeAreaView style={[styles.container]}>\n      <StatusBar style='auto' />\n      <FlatList data={tasks} renderItem={renderItem} />\n      <Input\n        onChangeText={setInput}\n        value={input}\n        placeholder='New task...'\n      ></Input><Button title='Add' onPress={addTask} />\n    </SafeAreaView>\n  );\n}\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName='Login'>\n        <Stack.Screen name='Login' component={LoginScreen} />\n        <Stack.Screen name='Registration' component={RegistrationScreen} />\n        <Stack.Screen name='Todo' component={TodoScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\n\n// async function cacheFonts(fonts) {\n//   return fonts.map(async (font) => await Font.loadAsync(font));\n// }\n\n// let startTasks = [\n//   {description: 'Task 1', completed: true, key: 1, relatedTasks: [2]},\n//   {description: 'Task 2', completed: true, key: 2}\n// ]\n\n// const Stack = createNativeStackNavigator();\n\n// function TodoScreen({navigation, tasks, setTasks}) {\n//   cacheFonts([FontAwesome.font]);\n//   let [input, setInput] = useState('');\n\n//   let updateTask = async (task) => {\n//     task.completed = !task.completed;\n//     setTasks([...tasks]);\n//     await AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n//   }\n//   let addTask = async () => {\n//     let maxKey = 0;\n//     tasks.forEach(task => {\n//       if(task.key > maxKey) {\n//         maxKey = task.key;\n//       }\n//     });\n//     let newTasks = [\n//       ...tasks, \n//       {\n//         description: input,\n//         completed: false,\n//         key: maxKey + 1\n//       }\n//     ]\n//     setTasks(newTasks);\n//     console.log(tasks);\n//     await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n//     setInput('');\n//   }\n//   let renderItem = ({ item }) => {\n//     return <CheckBox\n//     textStyle={ item.completed ? {\n//       textDecorationLine: 'line-through', textDecorationStyle: 'solid'\n//     } : undefined}\n//     title={item.description}\n//     checked={item.completed}\n//     onPress={() => updateTask(item)} />\n//   }\n// }\n\n\n\n// export default async function App() {\n//   let [tasks, setTasks] = useState(startTasks);\n//   useEffect(() => {\n//     async function getValue() {\n//       const value = await AsyncStorage.getItem('@tasks');\n//       if (value === null) {\n//         console.log(\n//           'Storing list of serialized tasks' +\n//           JSON.stringify(tasks)\n//         );\n//       await AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n//       } else {\n//         let parsedVal = JSON.parse(value);\n//         console.log('Retrieving list of serialized tasks');\n//         console.log(parsedVal);\n//           setTasks(JSON.parse(value));\n//       }\n//     }\n//     getValue();\n//   }, []);\n\n//   return (\n//     <NavigationContainer>\n//       <View style={styles.container}>\n//       <Stack.Navigator initialRouteName='Login'>\n//         <Stack.Screen name='Todo' component={TodoScreen}>\n//           {(props) => (\n//             <TodoScreen {...props} tasks={tasks} setTasks={setTasks} />\n//           )}\n//         </Stack.Screen>\n\n//         <Stack.Screen name='Login' component={LoginScreen}>\n//           {(props) => \n//           <LoginScreen {...props}/>\n//           }\n//         </Stack.Screen>\n\n//         <Stack.Screen name='Registration' component={RegistrationScreen}>\n//         {(props) => \n//           <RegistrationScreen {...props}/>\n//           }\n//         </Stack.Screen>\n//       </Stack.Navigator>\n//     <SafeAreaView style={[styles.container]}>\n//       <StatusBar style='auto' />\n//       <FlatList data={tasks} renderItem={renderItem} />\n//       <Input \n//       onChangeText={setInput}\n//       value={input}\n//       placeholder='New task...'\n//       ></Input><Button title='Add' onPress={addTask}/>\n//     </SafeAreaView>\n//     </View>\n//     </NavigationContainer>\n//   );\n// }\n\n\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AAC/C,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAEtDC,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAAzB,WAA0BC,KAAK,EAAE;IAC/B,OAAOA,KAAK,CAACC,GAAG;MAAA,IAAAC,KAAA,GAAAH,iBAAA,CAAC,WAAOI,IAAI;QAAA,aAAWnB,IAAI,CAACoB,SAAS,CAACD,IAAI,CAAC;MAAA;MAAA,iBAAAE,GAAA;QAAA,OAAAH,KAAA,CAAAL,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;EAC9D,CAAC;EAAA,OAAAF,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASQ,WAAWA,CAAAC,IAAA,EAAwB;EAAA,IAArBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EACtCf,UAAU,CAAC,CAACT,WAAW,CAACkB,IAAI,CAAC,CAAC;EAC9B,IAAAO,SAAA,GAAgC3B,QAAQ,CAAC,EAAE,CAAC;IAAA4B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgChC,QAAQ,CAAC,EAAE,CAAC;IAAAiC,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAG5B,IAAMG,WAAW;IAAA,IAAAC,KAAA,GAAArB,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,IAAMsB,SAAS,SAAShC,YAAY,CAACiC,OAAO,CAAC,WAAW,CAAC;QACzD,IAAID,SAAS,EAAE;UACb,IAAME,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;UACnC,IAAMK,IAAI,GAAGH,KAAK,CAACI,IAAI,CAAC,UAAAC,CAAC;YAAA,OAAIA,CAAC,CAACf,QAAQ,KAAKA,QAAQ,IAAIe,CAAC,CAACX,QAAQ,KAAKA,QAAQ;UAAA,EAAC;UAChF,IAAMY,QAAQ,GAAGN,KAAK,CAACI,IAAI,CAAC;YAAA,OAAMd,QAAQ,KAAK,MAAM,IAAII,QAAQ,KAAK,QAAQ;UAAA,EAAC;UAC/E,IAAIS,IAAI,IAAIG,QAAQ,EAAE;YACpBrB,UAAU,CAACsB,QAAQ,CAAC,MAAM,CAAC;YAC3BC,OAAO,CAACC,GAAG,CAACX,SAAS,CAAC;UACxB,CAAC,MAAM;YACLY,KAAK,CAAC,8BAA8B,CAAC;UACvC;QACF,CAAC,MAAM;UACLA,KAAK,CAAC,yBAAyB,CAAC;QAClC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAAA,gBAnBKf,WAAWA,CAAA;MAAA,OAAAC,KAAA,CAAAvB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAmBhB;EAED,OACEL,KAAA,CAACnB,YAAY;IAAC6D,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,CAAE;IAAAC,QAAA,GACtC/C,IAAA,CAACX,KAAK;MAAC2D,WAAW,EAAC,UAAU;MAACC,MAAM,EAAC,gBAAgB;MAACC,KAAK,EAAE5B,QAAS;MAAC6B,YAAY,EAAE,SAAAA,aAACD,KAAK,EAAK;QAAE3B,WAAW,CAAC2B,KAAK,CAAC;MAAC;IAAE,CAAE,CAAC,EAC1HlD,IAAA,CAACX,KAAK;MAAC2D,WAAW,EAAC,UAAU;MAACC,MAAM,EAAC,gBAAgB;MAACC,KAAK,EAAExB,QAAS;MAAC0B,eAAe,EAAE,IAAK;MAACD,YAAY,EAAE,SAAAA,aAACD,KAAK,EAAK;QAAEvB,WAAW,CAACuB,KAAK,CAAC;MAAC;IAAE,CAAE,CAAC,EACjJlD,IAAA,CAAChB,MAAM;MAACqE,KAAK,EAAC,OAAO;MAACJ,MAAM,EAAC,cAAc;MAACK,OAAO,EAAE1B;IAAY,CAAE,CAAC,EACpE5B,IAAA,CAAChB,MAAM;MAACqE,KAAK,EAAC,UAAU;MAACJ,MAAM,EAAC,gBAAgB;MAACK,OAAO,EAAE,SAAAA,QAAA;QAAA,OACxDrC,UAAU,CAACsB,QAAQ,CAAC,cAAc,CAAC;MAAA;IAAC,CAAE,CAAC;EAAA,CAC7B,CAAC;AAEnB;AAEA,SAASgB,kBAAkBA,CAAAC,KAAA,EAAwB;EAAA,IAArBvC,UAAU,GAAAuC,KAAA,CAAVvC,UAAU;IAAEC,KAAK,GAAAsC,KAAA,CAALtC,KAAK;EAC7Cf,UAAU,CAAC,CAACT,WAAW,CAACkB,IAAI,CAAC,CAAC;EAC9B,IAAA6C,UAAA,GAAgCjE,QAAQ,CAAC,EAAE,CAAC;IAAAkE,UAAA,GAAArC,cAAA,CAAAoC,UAAA;IAArCnC,QAAQ,GAAAoC,UAAA;IAAEnC,WAAW,GAAAmC,UAAA;EAC5B,IAAAC,UAAA,GAAgCnE,QAAQ,CAAC,EAAE,CAAC;IAAAoE,UAAA,GAAAvC,cAAA,CAAAsC,UAAA;IAArCjC,QAAQ,GAAAkC,UAAA;IAAEjC,WAAW,GAAAiC,UAAA;EAG5B,IAAMC,cAAc;IAAA,IAAAC,KAAA,GAAAtD,iBAAA,CAAG,aAAY;MACjC,IAAI;QACF,IAAMsB,SAAS,SAAShC,YAAY,CAACiC,OAAO,CAAC,WAAW,CAAC;QACzD,IAAMC,KAAK,GAAGF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,EAAE;QACpDE,KAAK,CAAC+B,IAAI,CAAC;UAAEzC,QAAQ,EAARA,QAAQ;UAAEI,QAAQ,EAARA;QAAS,CAAC,CAAC;QAClC,MAAM5B,YAAY,CAACkE,OAAO,CAAC,WAAW,EAAE/B,IAAI,CAACgC,SAAS,CAACjC,KAAK,CAAC,CAAC;QAC9D,IAAIF,SAAS,EAAE;UACbY,KAAK,CAAC,8BAA8B,CAAC;UACrCF,OAAO,CAACC,GAAG,CAACX,SAAS,CAAC;QAExB;MACF,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAAA,gBAdKkB,cAAcA,CAAA;MAAA,OAAAC,KAAA,CAAAxD,KAAA,OAAAC,SAAA;IAAA;EAAA,GAcnB;EACD,IAAA2D,UAAA,GAAmC1E,QAAQ,CAAC,KAAK,CAAC;IAAA2E,WAAA,GAAA9C,cAAA,CAAA6C,UAAA;IAA3CE,UAAU,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAE/B,OACEjE,KAAA,CAACnB,YAAY;IAAC6D,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,CAAE;IAAAC,QAAA,GACtC/C,IAAA,CAACX,KAAK;MAAC2D,WAAW,EAAC,YAAY;MAACC,MAAM,EAAC,WAAW;MAACE,YAAY,EAAE,SAAAA,aAACD,KAAK,EAAK;QAAEoB,YAAY,CAACpB,KAAK,CAAC;MAAC;IAAE,CAAE,CAAC,EACvGlD,IAAA,CAACX,KAAK;MAAC2D,WAAW,EAAC,WAAW;MAACC,MAAM,EAAC,UAAU;MAACE,YAAY,EAAE,SAAAA,aAACD,KAAK,EAAK;QAAEqB,WAAW,CAACrB,KAAK,CAAC;MAAC;IAAE,CAAE,CAAC,EACpGlD,IAAA,CAACX,KAAK;MAAC2D,WAAW,EAAC,UAAU;MAACC,MAAM,EAAC,UAAU;MAACE,YAAY,EAAE,SAAAA,aAACD,KAAK,EAAK;QAAE3B,WAAW,CAAC2B,KAAK,CAAC;MAAC;IAAE,CAAE,CAAC,EACnGlD,IAAA,CAACX,KAAK;MAAC2D,WAAW,EAAC,cAAc;MAACC,MAAM,EAAC,aAAa;MAACE,YAAY,EAAE,SAAAA,aAACD,KAAK,EAAK;QAAEsB,cAAc,CAACtB,KAAK,CAAC;MAAC;IAAE,CAAE,CAAC,EAC7GlD,IAAA,CAACX,KAAK;MAAC2D,WAAW,EAAC,UAAU;MAACC,MAAM,EAAC,UAAU;MAACG,eAAe,EAAE,IAAK;MAACD,YAAY,EAAE,SAAAA,aAACD,KAAK,EAAK;QAAEvB,WAAW,CAACuB,KAAK,CAAC;MAAC;IAAE,CAAE,CAAC,EAC1HlD,IAAA,CAACX,KAAK;MAAC2D,WAAW,EAAC,kBAAkB;MAACC,MAAM,EAAC,iBAAiB;MAACG,eAAe,EAAE,IAAK;MAACD,YAAY,EAAE,SAAAA,aAACD,KAAK,EAAK;QAAEvB,WAAW,CAACuB,KAAK,CAAC;MAAC;IAAE,CAAE,CAAC,EACzIlD,IAAA,CAACX,KAAK;MAAC2D,WAAW,EAAC,OAAO;MAACC,MAAM,EAAC,OAAO;MAACE,YAAY,EAAE,SAAAA,aAACD,KAAK,EAAK;QAAEuB,QAAQ,CAACvB,KAAK,CAAC;MAAC;IAAE,CAAE,CAAC,EAC1FlD,IAAA,CAACX,KAAK;MAAC2D,WAAW,EAAC,UAAU;MAACC,MAAM,EAAC,KAAK;MAACE,YAAY,EAAE,SAAAA,aAACD,KAAK,EAAK;QAAEwB,MAAM,CAACxB,KAAK,CAAC;MAAC;IAAE,CAAE,CAAC,EACzFlD,IAAA,CAACZ,QAAQ;MAACiE,KAAK,EAAE,wBAAyB;MAACJ,MAAM,EAAC,YAAY;MAACC,KAAK,EAAEkB,UAAW;MAACO,aAAa,EAAEN;IAAa,CAAE,CAAC,EACjHrE,IAAA,CAAChB,MAAM;MAACqE,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAEO;IAAe,CAAE,CAAC;EAAA,CACtC,CAAC;AAEnB;AAEA,IAAIe,UAAU,GAAG,CACf;EAAEC,WAAW,EAAE,QAAQ;EAAEC,SAAS,EAAE,IAAI;EAAEC,GAAG,EAAE;AAAE,CAAC,EAClD;EAAEF,WAAW,EAAE,QAAQ;EAAEC,SAAS,EAAE,IAAI;EAAEC,GAAG,EAAE;AAAE,CAAC,CACnD;AAED,SAASC,UAAUA,CAAAC,KAAA,EAAiB;EAAA,IAAdhE,UAAU,GAAAgE,KAAA,CAAVhE,UAAU;EAC9Bd,UAAU,CAAC,CAACT,WAAW,CAACkB,IAAI,CAAC,CAAC;EAC9B,IAAAsE,WAAA,GAAwB1F,QAAQ,CAACoF,UAAU,CAAC;IAAAO,WAAA,GAAA9D,cAAA,CAAA6D,WAAA;IAAvCE,KAAK,GAAAD,WAAA;IAAEE,QAAQ,GAAAF,WAAA;EACpB,IAAAG,WAAA,GAAwB9F,QAAQ,CAAC,EAAE,CAAC;IAAA+F,WAAA,GAAAlE,cAAA,CAAAiE,WAAA;IAA/BE,KAAK,GAAAD,WAAA;IAAEE,QAAQ,GAAAF,WAAA;EACpB,IAAIG,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAI,EAAK;IACzBA,IAAI,CAACb,SAAS,GAAG,CAACa,IAAI,CAACb,SAAS;IAChCO,QAAQ,CAAAO,kBAAA,CAAKR,KAAK,CAAC,CAAC;EACtB,CAAC;EACD,IAAIS,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IAClB,IAAIC,MAAM,GAAG,CAAC;IACdV,KAAK,CAACW,OAAO,CAAC,UAAAJ,IAAI,EAAI;MACpB,IAAIA,IAAI,CAACZ,GAAG,GAAGe,MAAM,EAAE;QACrBA,MAAM,GAAGH,IAAI,CAACZ,GAAG;MACnB;IACF,CAAC,CAAC;IACFM,QAAQ,IAAAW,MAAA,CAAAJ,kBAAA,CAAKR,KAAK,IAAE;MAClBP,WAAW,EAAEW,KAAK;MAClBV,SAAS,EAAE,KAAK;MAChBC,GAAG,EAAEe,MAAM,GAAG;IAChB,CAAC,EAAC,CAAC;IACHtD,OAAO,CAACC,GAAG,CAAC2C,KAAK,CAAC;IAClBK,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EACD,IAAIQ,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA,EAAiB;IAAA,IAAXC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IACtB,OAAOnG,IAAA,CAACZ,QAAQ;MACdgH,SAAS,EAAED,IAAI,CAACrB,SAAS,GAAG;QAC1BuB,kBAAkB,EAAE,cAAc;QAAEC,mBAAmB,EAAE;MAC3D,CAAC,GAAGC,SAAU;MACdlD,KAAK,EAAE8C,IAAI,CAACtB,WAAY;MACxB2B,OAAO,EAAEL,IAAI,CAACrB,SAAU;MACxBxB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMoC,UAAU,CAACS,IAAI,CAAC;MAAA;IAAC,CAAE,CAAC;EACvC,CAAC;EACD,OACEjG,KAAA,CAACnB,YAAY;IAAC6D,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,CAAE;IAAAC,QAAA,GACtC/C,IAAA,CAACnB,SAAS;MAAC+D,KAAK,EAAC;IAAM,CAAE,CAAC,EAC1B5C,IAAA,CAACf,QAAQ;MAACwH,IAAI,EAAErB,KAAM;MAACa,UAAU,EAAEA;IAAW,CAAE,CAAC,EACjDjG,IAAA,CAACX,KAAK;MACJ8D,YAAY,EAAEsC,QAAS;MACvBvC,KAAK,EAAEsC,KAAM;MACbxC,WAAW,EAAC;IAAa,CACnB,CAAC,EAAAhD,IAAA,CAAChB,MAAM;MAACqE,KAAK,EAAC,KAAK;MAACC,OAAO,EAAEuC;IAAQ,CAAE,CAAC;EAAA,CACrC,CAAC;AAEnB;AAEA,IAAMa,KAAK,GAAG7G,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAAS8G,GAAGA,CAAA,EAAG;EAC5B,OACE3G,IAAA,CAACJ,mBAAmB;IAAAmD,QAAA,EAClB7C,KAAA,CAACwG,KAAK,CAACE,SAAS;MAACC,gBAAgB,EAAC,OAAO;MAAA9D,QAAA,GACvC/C,IAAA,CAAC0G,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEjG;MAAY,CAAE,CAAC,EACrDf,IAAA,CAAC0G,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAEzD;MAAmB,CAAE,CAAC,EACnEvD,IAAA,CAAC0G,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEhC;MAAW,CAAE,CAAC;IAAA,CACpC;EAAC,CACC,CAAC;AAE1B;AAIA,IAAMnC,MAAM,GAAG/D,UAAU,CAACmI,MAAM,CAAC;EAC/BnE,SAAS,EAAE;IACToE,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}