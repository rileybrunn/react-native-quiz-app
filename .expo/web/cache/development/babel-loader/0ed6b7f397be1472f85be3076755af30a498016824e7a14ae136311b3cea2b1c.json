{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar currentTimer = 0;\nexport default function StopWatch() {\n  cacheFonts([FontAwesome.font]);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    running = _useState2[0],\n    setRunning = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    timer = _useState4[0],\n    setTimer = _useState4[1];\n  var updateTimer = useCallback(function () {\n    if (running) {\n      setTimer(function (timer) {\n        return timer + 10;\n      });\n    }\n  }, [running]);\n  useEffect(function () {\n    currentTimer = setInterval(updateTimer, 10);\n    return function () {\n      return clearInterval(currentTimer);\n    };\n  }, [running]);\n  var startStop = useCallback(function () {\n    setRunning(!running);\n    clearInterval(currentTimer);\n  }, [running]);\n  var reset = useCallback(function () {\n    setTimer(0);\n  });\n  var mins = Math.floor(timer / (1000 * 60) % 60).toString().padStart(2, \"0\");\n  var secs = Math.floor(timer / 1000 % 60).toString().padStart(2, \"0\");\n  var mills = (timer % 1000).toString().padStart(3, \"0\");\n  return _jsxs(\"div\", {\n    style: {\n      width: \"100vw\",\n      textAlign: \"center\"\n    },\n    children: [_jsxs(\"p\", {\n      style: {\n        fontSize: \"7em\",\n        margin: \"auto\",\n        fontFamily: \"monospace\"\n      },\n      children: [mins, \":\", secs, \".\", mills]\n    }), _jsx(\"button\", {\n      style: {\n        \"fontSize\": \"4em\"\n      },\n      onClick: startStop,\n      children: running ? \"Pause\" : \"Start\"\n    }), _jsx(\"button\", {\n      style: {\n        fontSize: \"4em\"\n      },\n      onClick: function onClick() {\n        setTimer(0);\n      },\n      children: \"Reset\"\n    })]\n  });\n}","map":{"version":3,"names":["useCallback","useEffect","useState","Font","FontAwesome","jsxs","_jsxs","jsx","_jsx","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref","font","loadAsync","_x2","currentTimer","StopWatch","_useState","_useState2","_slicedToArray","running","setRunning","_useState3","_useState4","timer","setTimer","updateTimer","setInterval","clearInterval","startStop","reset","mins","Math","floor","toString","padStart","secs","mills","style","width","textAlign","children","fontSize","margin","fontFamily","onClick"],"sources":["C:/Users/Frank/Desktop/DIG 4639C/dig4639-s24-react-rileybrunn/unit2/lab9/components/StopWatch.js"],"sourcesContent":["\r\nimport { useCallback, useEffect, useState } from \"react\"\r\nimport * as Font from 'expo-font'\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\n\r\nlet currentTimer = 0\r\n\r\nexport default function StopWatch() {\r\n  cacheFonts([FontAwesome.font])  \r\n  \r\n  let [running, setRunning] = useState(false)\r\n    let [timer, setTimer] = useState(0)\r\n    let updateTimer = useCallback(() => {\r\n      if(running) {\r\n        setTimer((timer) => timer+10)\r\n      }\r\n    }, [running])\r\n    useEffect(() => {\r\n      currentTimer = setInterval(updateTimer, 10)\r\n      return () => clearInterval(currentTimer)\r\n    }, [running])\r\n    let startStop = useCallback(() => {\r\n      setRunning(!running)\r\n      clearInterval(currentTimer)\r\n    }, [running])\r\n    let reset = useCallback(() => {\r\n      setTimer(0)\r\n    })\r\n\r\n    let mins = (Math.floor((timer / (1000*60)) % 60)).toString().padStart(2, \"0\")\r\n    let secs = (Math.floor((timer / 1000) % 60)).toString().padStart(2, \"0\")\r\n    let mills = (timer % 1000).toString().padStart(3, \"0\")\r\n    return <div style={{width:\"100vw\", textAlign:\"center\"}}>\r\n      <p style={{fontSize:\"7em\", margin:\"auto\", fontFamily:\"monospace\"}}>{mins}:{secs}.{mills}</p>\r\n      <button style={{\"fontSize\": \"4em\"}} onClick={startStop}>\r\n        {running ? \"Pause\" : \"Start\"}\r\n      </button>\r\n      <button style={{fontSize:\"4em\"}} onClick={() => {\r\n        setTimer(0)\r\n      }} >Reset</button>\r\n    </div>\r\n  }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}