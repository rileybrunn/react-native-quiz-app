{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Frank\\\\Desktop\\\\DIG 4639C\\\\dig4639-s24-react-rileybrunn\\\\unit2\\\\ex7\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Input } from \"react-native-web/dist/index\";\nimport { CheckBox, Text } from '@rneui/themed';\nimport { useState } from 'react';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref2 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar startTasks = [{\n  key: '1',\n  description: 'Task 1',\n  completed: true\n}, {\n  key: '2',\n  description: 'Task 2',\n  completed: true\n}];\nexport default function App() {\n  var _this = this;\n  cacheFonts([FontAwesome.font]);\n  var _useState = useState(startTasks),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    updateInput = _useState4[1];\n  var updateTask = function updateTask(task) {\n    task.completed = !task.completed;\n    setTasks(_toConsumableArray(tasks));\n  };\n  var addTask = function addTask() {\n    var maxKey = 0;\n    tasks.forEach(function (task) {\n      if (task.key > maxKey) {\n        maxKey = tasks.key;\n      }\n    });\n    setTasks([].concat(_toConsumableArray(tasks), [{\n      description: input,\n      completed: false,\n      key: maxKey++\n    }]));\n  };\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsxDEV(CheckBox, {\n      textStyle: item.completed ? {\n        textDecorationLine: 'line-through',\n        textDecorationStyle: 'solid'\n      } : undefined,\n      title: item.description,\n      checked: item.completed,\n      onPress: function onPress() {\n        return updateTask(item);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, _this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: [styles.container],\n    children: [_jsxDEV(StatusBar, {\n      style: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), _jsxDEV(Input, {\n      onChangeText: updateInput,\n      value: input,\n      placeholder: \"New task...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Add\",\n      onPress: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","SafeAreaView","Button","FlatList","Input","CheckBox","Text","useState","Font","FontAwesome","React","jsxDEV","_jsxDEV","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref2","font","loadAsync","_x2","startTasks","key","description","completed","App","_this","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","input","updateInput","updateTask","task","_toConsumableArray","addTask","maxKey","forEach","concat","renderItem","_ref","item","textStyle","textDecorationLine","textDecorationStyle","undefined","title","checked","onPress","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","children","data","onChangeText","value","placeholder","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/Frank/Desktop/DIG 4639C/dig4639-s24-react-rileybrunn/unit2/ex7/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, SafeAreaView, Button, FlatList, Input } from 'react-native';\nimport { CheckBox, Text } from '@rneui/themed';\nimport { useState } from 'react';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport React from 'react';\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font));\n}\n\nlet startTasks = [\n  {key: '1', description: 'Task 1', completed: true},\n  {key: '2', description: 'Task 2', completed: true}\n]\n\nexport default function App() {\n  cacheFonts([FontAwesome.font]);\n  let [tasks, setTasks] = useState(startTasks);\n  let [input, updateInput] = useState('');\n  let updateTask = (task) => {\n    task.completed = !task.completed;\n    setTasks([...tasks]);\n  }\n  let addTask = () => {\n    let maxKey = 0;\n    tasks.forEach(task => {\n      if(task.key > maxKey) {\n        maxKey = tasks.key;\n      }\n    });\n    setTasks([...tasks, {\n      description: input,\n      completed: false,\n      key: maxKey++\n    }]);\n  }\n  let renderItem = ({ item }) => {\n    return <CheckBox\n    textStyle={ item.completed ? {\n      textDecorationLine: 'line-through', textDecorationStyle: 'solid'\n    } : undefined}\n    title={item.description}\n    checked={item.completed}\n    onPress={() => updateTask(item)} />\n  }\n\n  return (\n    <SafeAreaView style={[styles.container]}>\n      <StatusBar style='auto' />\n      <FlatList data={tasks} renderItem={renderItem} />\n      <Input \n      onChangeText={updateInput}\n      value={input}\n      placeholder='New task...'></Input>\n      <Button title='Add' onPress={addTask}></Button>\n    </SafeAreaView>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}