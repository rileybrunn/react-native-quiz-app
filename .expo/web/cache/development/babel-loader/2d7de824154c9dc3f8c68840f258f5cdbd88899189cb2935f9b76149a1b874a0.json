{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport styles from \"../App\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar currentTimer = 0;\nexport default function StopWatch() {\n  cacheFonts([FontAwesome.font]);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    running = _useState2[0],\n    setRunning = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    timer = _useState4[0],\n    setTimer = _useState4[1];\n  var updateTimer = useCallback(function () {\n    if (running) {\n      setTimer(function (timer) {\n        return timer + 10;\n      });\n    }\n  }, [running]);\n  useEffect(function () {\n    currentTimer = setInterval(updateTimer, 10);\n    return function () {\n      return clearInterval(currentTimer);\n    };\n  }, [running]);\n  var startStop = useCallback(function () {\n    setRunning(!running);\n    clearInterval(currentTimer);\n  }, [running]);\n  var reset = useCallback(function () {\n    setTimer(0);\n  });\n  var mins = Math.floor(timer / (1000 * 60) % 60).toString().padStart(2, \"0\");\n  var secs = Math.floor(timer / 1000 % 60).toString().padStart(2, \"0\");\n  var mills = (timer % 1000).toString().padStart(3, \"0\");\n  return _jsxs(View, {\n    style: {\n      width: \"100vw\",\n      textAlign: \"center\"\n    },\n    children: [_jsxs(Text, {\n      style: {\n        fontSize: \"7em\",\n        margin: \"auto\",\n        fontFamily: \"monospace\"\n      },\n      children: [mins, \":\", secs, \".\", mills]\n    }), _jsx(Button, {\n      title: running ? \"Pause\" : \"Start\",\n      style: {\n        \"fontSize\": \"4em\"\n      },\n      onPress: startStop\n    }), _jsx(Button, {\n      title: \"Reset\",\n      style: {\n        fontSize: \"4em\"\n      },\n      onPress: function onPress() {\n        setTimer(0);\n      }\n    })]\n  });\n}","map":{"version":3,"names":["useCallback","useEffect","useState","Font","FontAwesome","styles","jsxs","_jsxs","jsx","_jsx","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref","font","loadAsync","_x2","currentTimer","StopWatch","_useState","_useState2","_slicedToArray","running","setRunning","_useState3","_useState4","timer","setTimer","updateTimer","setInterval","clearInterval","startStop","reset","mins","Math","floor","toString","padStart","secs","mills","View","style","width","textAlign","children","Text","fontSize","margin","fontFamily","Button","title","onPress"],"sources":["C:/Users/Frank/Desktop/DIG 4639C/dig4639-s24-react-rileybrunn/unit2/lab9/components/StopWatch.js"],"sourcesContent":["import { StyleSheet, View, Button, FlatList, Text, StatusBar, TouchableOpacity } from 'react-native'\r\nimport { useCallback, useEffect, useState } from \"react\"\r\nimport * as Font from 'expo-font'\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\r\nimport styles from '../App'\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\n\r\nlet currentTimer = 0\r\n\r\nexport default function StopWatch() {\r\n  cacheFonts([FontAwesome.font])\r\n\r\n  let [running, setRunning] = useState(false)\r\n  let [timer, setTimer] = useState(0)\r\n  let updateTimer = useCallback(() => {\r\n    if (running) {\r\n      setTimer((timer) => timer + 10)\r\n    }\r\n  }, [running])\r\n  useEffect(() => {\r\n    currentTimer = setInterval(updateTimer, 10)\r\n    return () => clearInterval(currentTimer)\r\n  }, [running])\r\n  let startStop = useCallback(() => {\r\n    setRunning(!running)\r\n    clearInterval(currentTimer)\r\n  }, [running])\r\n  let reset = useCallback(() => {\r\n    setTimer(0)\r\n  })\r\n\r\n  let mins = (Math.floor((timer / (1000 * 60)) % 60)).toString().padStart(2, \"0\")\r\n  let secs = (Math.floor((timer / 1000) % 60)).toString().padStart(2, \"0\")\r\n  let mills = (timer % 1000).toString().padStart(3, \"0\")\r\n  return (\r\n    <View\r\n      style={{ width: \"100vw\", textAlign: \"center\" }}\r\n    >\r\n      <Text\r\n        style={{ fontSize: \"7em\", margin: \"auto\", fontFamily: \"monospace\" }}>\r\n        {mins}:{secs}.{mills}\r\n      </Text>\r\n      <Button\r\n        title={running ? \"Pause\" : \"Start\"}\r\n        style={{ \"fontSize\": \"4em\" }}\r\n        onPress={startStop}\r\n      />\r\n      <Button\r\n        title='Reset'\r\n        style={{ fontSize: \"4em\" }}\r\n        onPress={() => {\r\n          setTimer(0)\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}