{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { CheckBox, Input } from '@rneui/themed';\nimport { useCallback, useEffect, useState } from 'react';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';","map":{"version":3,"names":["StatusBar","StyleSheet","SafeAreaView","Button","FlatList","Text","View","CheckBox","Input","useCallback","useEffect","useState","Font","FontAwesome","React","NavigationContainer","createNativeStackNavigator","AsyncStorage"],"sources":["C:/Users/Frank/Desktop/DIG 4639C/dig4639-s24-react-rileybrunn/unit2/lab8/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, SafeAreaView, Button, FlatList, Text, View } from 'react-native';\nimport { CheckBox, Input } from '@rneui/themed';\nimport { useCallback, useEffect, useState } from 'react';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\n// async function cacheFonts(fonts) {\n//   return fonts.map(async (font) => await Font.loadAsync(font));\n// }\n\n// let startTasks = [\n//   {description: 'Task 1', completed: true, key: 1, relatedTasks: [2]},\n//   {description: 'Task 2', completed: true, key: 2}\n// ]\n\n// const Stack = createNativeStackNavigator();\n\n// function TodoScreen({navigation, tasks, setTasks}) {\n//   cacheFonts([FontAwesome.font]);\n//   let [input, setInput] = useState('');\n\n//   let updateTask = async (task) => {\n//     task.completed = !task.completed;\n//     setTasks([...tasks]);\n//     await AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n//   }\n//   let addTask = async () => {\n//     let maxKey = 0;\n//     tasks.forEach(task => {\n//       if(task.key > maxKey) {\n//         maxKey = task.key;\n//       }\n//     });\n//     let newTasks = [\n//       ...tasks, \n//       {\n//         description: input,\n//         completed: false,\n//         key: maxKey + 1\n//       }\n//     ]\n//     setTasks(newTasks);\n//     console.log(tasks);\n//     await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n//     setInput('');\n//   }\n//   let renderItem = ({ item }) => {\n//     return <CheckBox\n//     textStyle={ item.completed ? {\n//       textDecorationLine: 'line-through', textDecorationStyle: 'solid'\n//     } : undefined}\n//     title={item.description}\n//     checked={item.completed}\n//     onPress={() => updateTask(item)} />\n//   }\n// }\n\n\n\n// export default async function App() {\n//   let [tasks, setTasks] = useState(startTasks);\n//   useEffect(() => {\n//     async function getValue() {\n//       const value = await AsyncStorage.getItem('@tasks');\n//       if (value === null) {\n//         console.log(\n//           'Storing list of serialized tasks' +\n//           JSON.stringify(tasks)\n//         );\n//       await AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n//       } else {\n//         let parsedVal = JSON.parse(value);\n//         console.log('Retrieving list of serialized tasks');\n//         console.log(parsedVal);\n//           setTasks(JSON.parse(value));\n//       }\n//     }\n//     getValue();\n//   }, []);\n\n//   return (\n//     <NavigationContainer>\n//       <View style={styles.container}>\n//       <Stack.Navigator initialRouteName='Login'>\n//         <Stack.Screen name='Todo' component={TodoScreen}>\n//           {(props) => (\n//             <TodoScreen {...props} tasks={tasks} setTasks={setTasks} />\n//           )}\n//         </Stack.Screen>\n\n//         <Stack.Screen name='Login' component={LoginScreen}>\n//           {(props) => \n//           <LoginScreen {...props}/>\n//           }\n//         </Stack.Screen>\n\n//         <Stack.Screen name='Registration' component={RegistrationScreen}>\n//         {(props) => \n//           <RegistrationScreen {...props}/>\n//           }\n//         </Stack.Screen>\n//       </Stack.Navigator>\n//     <SafeAreaView style={[styles.container]}>\n//       <StatusBar style='auto' />\n//       <FlatList data={tasks} renderItem={renderItem} />\n//       <Input \n//       onChangeText={setInput}\n//       value={input}\n//       placeholder='New task...'\n//       ></Input><Button title='Add' onPress={addTask}/>\n//     </SafeAreaView>\n//     </View>\n//     </NavigationContainer>\n//   );\n// }\n\n\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AAC/C,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,YAAY,MAAM,2CAA2C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}